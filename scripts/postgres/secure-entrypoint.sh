#!/bin/bash
set -euo pipefail

# Determine Postgres data directory and desired pg_hba.conf path
PGDATA_DIR="${PGDATA:-/var/lib/postgresql/data}"
CUSTOM_HBA_PATH="${PGDATA_DIR%/}/pg_hba_custom.conf"

# Ensure the primary Postgres role is defined
if [[ -z "${POSTGRES_USER:-}" ]]; then
  echo "POSTGRES_USER must be set" >&2
  exit 1
fi

# Read allowed client CIDRs from environment (comma or whitespace separated)
RAW_ALLOWED_CLIENTS="${POSTGRES_ALLOWED_CLIENTS:-172.28.0.20/32}"
RAW_ALLOWED_CLIENTS="${RAW_ALLOWED_CLIENTS//,/ }"

# Ensure we always have at least one entry
if [[ -z "${RAW_ALLOWED_CLIENTS// }" ]]; then
  echo "POSTGRES_ALLOWED_CLIENTS is empty; refusing to start Postgres with an open pg_hba.conf" >&2
  exit 1
fi

# Create pg_hba.conf with restricted host rules
{
  echo "# Generated by secure-entrypoint.sh"
  echo "local   all             all                                     peer"
  echo "host    all             all             127.0.0.1/32            scram-sha-256"
  echo "host    all             all             ::1/128                 scram-sha-256"

  for cidr in ${RAW_ALLOWED_CLIENTS}; do
    if [[ -n "$cidr" ]]; then
      echo "host    all             ${POSTGRES_USER}        ${cidr}            scram-sha-256"
    fi
  done

  echo "host    all             all             0.0.0.0/0            reject"
  echo "host    all             all             ::/0                 reject"
} > "${CUSTOM_HBA_PATH}"

chmod 600 "${CUSTOM_HBA_PATH}"

exec /usr/local/bin/docker-entrypoint.sh postgres -c "hba_file=${CUSTOM_HBA_PATH}" "$@"
