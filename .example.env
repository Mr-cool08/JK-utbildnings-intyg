# Example environment configuration for JK Utbildningsintyg
# Copy this file to `.env` and adjust the values for your environment.

# SMTP server settings used to send account activation emails
# Use port 587 for STARTTLS or 465 for SSL
smtp_port=587
smtp_server=smtp.example.com
smtp_user=your_email@example.com
smtp_password=your_password
smtp_timeout=10

# Administrator credentials for the admin panel
admin_username=your_admin_username
admin_password=your_admin_password

# Secret key used by Flask to secure sessions
secret_key=your_secret_key

# Salt used for hashing personal data such as email and personnummer
HASH_SALT=choose_a_good_salt

# Database configuration
# BUNDLED_POSTGRES controls the in-container PostgreSQL server:
#   auto   - start it when DATABASE_URL is empty (default)
#   always - always start the bundled server
#   off    - never start it (use an external database)
BUNDLED_POSTGRES=auto
# When running with Docker Compose, POSTGRES_* configures the separate
# PostgreSQL container which automatically creates the database on first start.
# The same values are reused by the bundled server when it is enabled.
POSTGRES_DB=appdb
POSTGRES_USER=appuser
POSTGRES_PASSWORD=change_me
POSTGRES_PORT=5432
# When pointing the application at an external PostgreSQL instance, provide
# the hostname or IP here. When set and DATABASE_URL is empty, the application
# will build a connection string automatically using the POSTGRES_* values.
POSTGRES_HOST=
# For standalone deployments you can set DATABASE_URL to an existing Postgres
# instance. Leave it blank to use the Docker Compose database or the SQLite
# fallback defined by DB_PATH.
DATABASE_URL=
DB_PATH=/data/database.db

# Optional: TLS certificate and key for HTTPS
# Paste the PEM contents directly. Use \n for newlines if necessary.
# When both values are provided the application will start with HTTPS.
TLS_CERT=
TLS_KEY=

# Enable debug mode for development
FLASK_DEBUG=False

