version: "3.9"

services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h 127.0.0.1 -p 5432"]
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 5s
    networks:
      postgres_db:
        ipv4_address: 172.28.0.10
    restart: always

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: jkintyg-app
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "5000:5000"
    networks:
      postgres_db:
        ipv4_address: 172.28.0.20
    restart: always

  proxy:
    image: nginx:latest
    container_name: jkintyg-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./certs:/etc/nginx/certs:ro
      - ./static:/usr/share/nginx/html:ro
    depends_on:
      - app
    networks:
      postgres_db:
        ipv4_address: 172.28.0.30
    restart: always

volumes:
  pgdata:

networks:
  postgres_db:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
